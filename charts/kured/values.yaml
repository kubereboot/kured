image:
  repository: weaveworks/kured
  tag: ""  # will default to the appVersion in Chart.yaml
  pullPolicy: IfNotPresent
  pullSecrets: []

updateStrategy: RollingUpdate
#  requires RollingUpdate updateStrategy
maxUnavailable: 1

podAnnotations: {}

extraArgs: {}

extraEnvVars:
#  - name: slackHookUrl
#    valueFrom:
#      secretKeyRef:
#        name: secret_name
#        key: secret_key
#  - name: regularEnvVariable
#    value: 123

configuration:
  lockTtl: 0                 # force clean annotation after this ammount of time (default 0, disabled)
  alertFilterRegexp: ""      # alert names to ignore when checking for active alerts
  blockingPodSelector: []    # label selector identifying pods whose presence should prevent reboots
  endTime: ""                # only reboot before this time of day (default "23:59")
  lockAnnotation: ""         # annotation in which to record locking node (default "weave.works/kured-node-lock")
  period: ""                 # reboot check period (default 1h0m0s)
  prometheusUrl: ""          # Prometheus instance to probe for active alerts
  rebootDays: []             # only reboot on these days (default [su,mo,tu,we,th,fr,sa])
  rebootSentinel: ""         # path to file whose existence signals need to reboot (default "/var/run/reboot-required")
  rebootCommand: "/bin/systemctl reboot"  # command to run when a reboot is required by the sentinel
  slackChannel: ""           # slack channel for reboot notfications
  slackHookUrl: ""           # slack hook URL for reboot notfications
  slackUsername: ""          # slack username for reboot notfications (default "kured")
  notifyUrl: ""              # notification URL with the syntax as follows: https://containrrr.dev/shoutrrr/services/overview/
  messageTemplateDrain: ""   # slack message template when notifying about a node being drained (default "Draining node %s")
  messageTemplateReboot: ""  # slack message template when notifying about a node being rebooted (default "Rebooted node %s")
  startTime: ""              # only reboot after this time of day (default "0:00")
  timeZone: ""               # time-zone to use (valid zones from "time" golang package)
  annotateNodes: false       # enable 'weave.works/kured-reboot-in-progress' and 'weave.works/kured-most-recent-reboot-needed' node annotations to signify kured reboot operations
  lockReleaseDelay: 0        # hold lock after reboot by this amount of time (default 0, disabled)

rbac:
  create: true

serviceAccount:
  create: true
  name:

podSecurityPolicy:
  create: false

resources: {}

metrics:
  create: false
  namespace: ""
  labels: {}
  interval: 60s
  scrapeTimeout: ""

service:
  create: false
  port: 8080
  annotations: {}
  name: ""
  type: ClusterIP

podLabels: {}

priorityClassName: ""

tolerations:
  - key: node-role.kubernetes.io/master
    effect: NoSchedule

affinity: {}

nodeSelector: {}

volumeMounts: []

volumes: []
