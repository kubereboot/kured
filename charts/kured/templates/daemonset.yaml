apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "kured.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kured.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: {{ .Values.updateStrategy }}
{{- if eq .Values.updateStrategy "RollingUpdate"}}
    rollingUpdate:
      maxUnavailable: {{ .Values.maxUnavailable }}
{{- end}}
  selector:
    matchLabels:
      {{- include "kured.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kured.labels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "kured.serviceAccountName" . }}
      {{- if eq .Values.configuration.nodeOs "linux" }}
      hostPID: true
      {{- end}}
      {{- if eq .Values.configuration.nodeOs "windows"}}
      hostNetwork: true
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\SYSTEM"
      {{- end}}
      restartPolicy: Always
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if eq .Values.configuration.nodeOs "windows" }}
      initContainers:
        - name: "{{ .Chart.Name }}-init"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: KURED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - powershell.exe
            - -File
            - Kured-Init.ps1
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if eq .Values.configuration.nodeOs "linux" }}
          securityContext:
            privileged: true # Give permission to nsenter /proc/1/ns/mnt
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          command:
              {{- if eq .Values.configuration.nodeOs "linux" }}
            - /usr/bin/kured
            {{- end}}
            {{- if eq .Values.configuration.nodeOs "windows" }}
            - kured.exe
            {{- end}}
          args:
            - --ds-name={{ template "kured.fullname" . }}
            - --ds-namespace={{ .Release.Namespace }}
          {{- if .Values.configuration.lockTtl }}
            - --lock-ttl={{ .Values.configuration.lockTtl }}
          {{- end }}
          {{- if .Values.configuration.lockReleaseDelay }}
            - --lock-release-delay={{ .Values.configuration.lockReleaseDelay }}
          {{- end }}
          {{- if .Values.configuration.alertFilterRegexp }}
            - --alert-filter-regexp={{ .Values.configuration.alertFilterRegexp }}
          {{- end }}
          {{- if .Values.configuration.alertFiringOnly }}
            - --alert-firing-only={{ .Values.configuration.alertFiringOnly }}
          {{- end }}
          {{- range .Values.configuration.blockingPodSelector }}
            - --blocking-pod-selector={{ . }}
          {{- end }}
          {{- if .Values.configuration.endTime }}
            - --end-time={{ .Values.configuration.endTime }}
          {{- end }}
          {{- if .Values.configuration.lockAnnotation }}
            - --lock-annotation={{ .Values.configuration.lockAnnotation }}
          {{- end }}
          {{- if .Values.configuration.period }}
            - --period={{ .Values.configuration.period }}
          {{- end }}
          {{- if .Values.configuration.forceReboot }}
            - --force-reboot
          {{- end }}
          {{- if .Values.configuration.drainGracePeriod }}
            - --drain-grace-period={{ .Values.configuration.drainGracePeriod }}
          {{- end }}
          {{- if .Values.configuration.drainTimeout }}
            - --drain-timeout={{ .Values.configuration.drainTimeout }}
          {{- end }}
          {{- if .Values.configuration.skipWaitForDeleteTimeout }}
            - --skip-wait-for-delete-timeout={{ .Values.configuration.skipWaitForDeleteTimeout }}
          {{- end }}
          {{- if .Values.configuration.prometheusUrl }}
            - --prometheus-url={{ .Values.configuration.prometheusUrl }}
          {{- end }}
          {{- range .Values.configuration.rebootDays }}
            - --reboot-days={{ . }}
          {{- end }}
          {{- if .Values.configuration.rebootSentinel }}
            - --reboot-sentinel={{ .Values.configuration.rebootSentinel }}
          {{- end }}
          {{- if .Values.configuration.rebootSentinelCommand }}
            - --reboot-sentinel-command={{ .Values.configuration.rebootSentinelCommand }}
          {{- end }}
          {{- if .Values.configuration.rebootCommand }}
            - --reboot-command={{ .Values.configuration.rebootCommand }}
          {{- end }}
          {{- if .Values.configuration.rebootDelay }}
            - --reboot-delay={{ .Values.configuration.rebootDelay }}
          {{- end }}
          {{- if .Values.configuration.slackChannel }}
            - --slack-channel={{ .Values.configuration.slackChannel }}
          {{- end }}
          {{- if .Values.configuration.slackHookUrl }}
            - --slack-hook-url={{ .Values.configuration.slackHookUrl }}
          {{- end }}
          {{- if .Values.configuration.slackUsername }}
            - --slack-username={{ .Values.configuration.slackUsername }}
          {{- end }}
          {{- if .Values.configuration.notifyUrl }}
            - --notify-url={{ .Values.configuration.notifyUrl }}
          {{- end }}
          {{- if .Values.configuration.messageTemplateDrain }}
            - --message-template-drain={{ .Values.configuration.messageTemplateDrain }}
          {{- end }}
          {{- if .Values.configuration.messageTemplateReboot }}
            - --message-template-reboot={{ .Values.configuration.messageTemplateReboot }}
          {{- end }}
          {{- if .Values.configuration.startTime }}
            - --start-time={{ .Values.configuration.startTime }}
          {{- end }}
          {{- if .Values.configuration.timeZone }}
            - --time-zone={{ .Values.configuration.timeZone }}
          {{- end }}
          {{- if .Values.configuration.annotateNodes }}
            - --annotate-nodes={{ .Values.configuration.annotateNodes }}
          {{- end }}
          {{- if .Values.configuration.preferNoScheduleTaint }}
            - --prefer-no-schedule-taint={{ .Values.configuration.preferNoScheduleTaint }}
          {{- end }}
          {{- range $key, $value := .Values.extraArgs }}
            {{- if $value }}
            - --{{ $key }}={{ $value }}
            {{- else }}
            - --{{ $key }}
            {{- end }}
          {{- end }}
{{- if .Values.volumeMounts }}
          volumeMounts:
{{- toYaml .Values.volumeMounts  | nindent 12 }}
{{- end }}
          ports:
            - containerPort: 8080
              name: metrics
          env:
            # Pass in the name of the node on which this pod is scheduled
            # for use with drain/uncordon operations and lock acquisition
            - name: KURED_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.extraEnvVars }}
              {{ toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      nodeSelector:
      {{- if .Values.nodeSelector }}
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end}}
      {{- if eq .Values.configuration.nodeOs "linux" }}
        "kubernetes.io/os": "linux"
      {{- else if eq .Values.configuration.nodeOs "windows" }}
        "kubernetes.io/os": "windows"
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- if .Values.volumes }}
      volumes:
{{- toYaml .Values.volumes  | nindent 8 }}
{{- end }}
